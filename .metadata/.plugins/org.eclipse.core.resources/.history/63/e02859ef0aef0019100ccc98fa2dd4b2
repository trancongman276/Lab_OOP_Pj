package lab2.Object;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;


public class Box {
	private final int width=8, 
					  height=8;
	private int nStep=0,t;
	Random Rand;
	Scanner sc;
	
	private char map[][];
	
	private static Box getInstantiate=null;
	
	public static Box getInstant() {
		if (getInstantiate == null) 
			{
			getInstantiate = new Box();
			}
		return getInstantiate;
	}
	
	private Box() {
		sc = new Scanner(System.in);
		Rand = new Random();
		map = new char[width+2][height+2];
		List<Pacticle> list = new ArrayList<Pacticle>();
		
		list = init();
		System.out.printf("Input n: "); nStep=sc.nextInt(); //Number of step.
		for(int n=1;n<=nStep;n++) {
			t=1;
			boolean k=true;
			System.out.println("Time "+n);
			list.forEach(i -> {
				while(k) //Try again if the particle hit the wall
				{
					if(i.move(width,
							   height,
							   Pacticle.Direction.values()[Rand.nextInt(
									Pacticle.Direction.values().length)])) break;
				}
				
				//Print out the position of particles in each step
					System.out.println("Pacticle "+t+": "+i.getX()+" "+i.getY()); 
					t++;
				
				
			});
			CheckCollide(list);
			draw(list); System.out.println();
		}
		
		System.out.println("Number of Pacticles: "+list.size());
		//draw(list);
		
	}
	//Set init values.
	private List<Pacticle> init() {
		
		//Create the first particles
		Rand = new Random();
		List<Pacticle> list = new ArrayList<Pacticle>();
		for(int i=0;i<=2;i++) {
			list.add(new Pacticle(Rand.nextInt(width-1)+1,
					Rand.nextInt(height-1)+1));
		}
		return list;		
}
	
	//Check if two or more particle collide or not
	private void CheckCollide(List<Pacticle> ls) {
		int i=1;
		boolean k=true;
		while(k) {
			i=1;
			k=false;
			for( Pacticle a : ls.subList(0,ls.size()-1)) {
				for (Pacticle b : ls.subList(i, ls.size()))
						if(a.getX()== b.getX() && a.getY()==b.getY()) {
							if(ls.size()==(width*height)) {
								System.out.println("Box is full."); 
								draw(ls);
								System.exit(-1);
								}
						
							boolean loop=true;
							while(loop) {
								loop=false;
								int w=Rand.nextInt(width-1)+1;
								int h=Rand.nextInt(height-1)+1;
									ls.forEach(c ->{
										if(c.getX()==w |c.getY()==h) {
											int t=1;
										}
									});
									if (t==1) loop=true;
							}	
							k=true;
						}
				if (k) break; else i++;
			}
			ls.add(new Pacticle(Rand.nextInt(width-1)+1,
					Rand.nextInt(height-1)+1));	
		}
	}
	//Draw particles in console
	private void draw(List<Pacticle> ls) {
		//Draw the box
				for(int y=0;y<=height;y++) {
					for(int x=0;x<=width;x++) {	 
						if(y==0 | y==height) map[x][y]='-';
						else 
							if(x==0 | x==width) map[x][y]='|';
							else map[x][y]=' ';
					}
				}
		ls.forEach(a ->{
			map[a.getX()][a.getY()]='x';
		});
		
		for(int y=0;y<=height+1;y++) {
			for(int x=0;x<=width+1;x++) {	 System.out.print(map[x][y]);
			}
			System.out.println();
			}
	}
}
